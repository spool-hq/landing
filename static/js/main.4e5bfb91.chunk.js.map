{"version":3,"sources":["components/Main/logo.png","components/Main/logo_bg.png","components/Icon/DiscordIcon.tsx","components/Icon/TelegramIcon.tsx","components/Icon/TwitterIcon.tsx","components/Main/Main.tsx","styles/Global.ts","App.tsx","index.tsx"],"names":["DiscordIcon","width","height","viewBox","fill","xmlns","d","TelegramIcon","TwitterIcon","Wrapper","styled","div","LogoBgWrapper","logoBg","Logo","img","Title","h1","SubTitle","span","Description","Button","button","Socials","Link","a","Main","props","src","logo","href","GlobalStyles","createGlobalStyle","App","Global","ReactDOM","render","document","getElementById"],"mappings":"qMAAe,MAA0B,iCCA1B,MAA0B,oC,OCE5BA,EAAkB,WAC7B,OACE,qBACEC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,0qCACFF,KAAK,oBCXAG,EAAmB,WAC9B,OACE,qBACEN,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,koBACFF,KAAK,oBCXAI,EAAkB,WAC7B,OACE,qBACEP,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,MAAM,6BALR,SAOE,sBACEC,EAAE,ujDACFF,KAAK,oBCJPK,EAAUC,IAAOC,IAAV,0KAUPC,EAAgBF,IAAOC,IAAV,mQAUGE,GAOhBC,EAAOJ,IAAOK,IAAV,sFAMJC,EAAQN,IAAOO,GAAV,gJAULC,EAAWR,IAAOS,KAAV,qLAURC,EAAcV,IAAOS,KAAV,8GAOXE,EAASX,IAAOY,OAAV,8xBAgDNC,EAAUb,IAAOC,IAAV,yIAQPa,EAAOd,IAAOe,EAAV,gQAkBGC,EAAkB,SAAAC,GAC7B,OACE,eAAClB,EAAD,WACE,cAACG,EAAD,UACE,cAACE,EAAD,CAAMc,IAAKC,MAEb,cAACb,EAAD,kEACA,cAACE,EAAD,4BACA,cAACE,EAAD,2bAQA,cAACC,EAAD,oCACA,eAACE,EAAD,WACE,eAACC,EAAD,CAAMM,KAAK,8BAAX,UACE,cAAC,EAAD,IADF,YAIA,eAACN,EAAD,CAAMM,KAAK,gCAAX,UACE,cAAC,EAAD,IADF,aAIA,eAACN,EAAD,CAAMM,KAAK,wBAAX,UACE,cAAC,EAAD,IADF,cAIA,eAACN,EAAD,CAAMM,KAAK,+BAAX,UACE,cAAC,EAAD,IADF,oBCvIOC,EApCMC,YAAH,2lBCaHC,MATf,WACE,OACE,qCACE,cAACC,EAAD,IACA,cAAC,EAAD,QCHNC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4e5bfb91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.7fcf014d.png\";","export default __webpack_public_path__ + \"static/media/logo_bg.7de8bdf7.png\";","import { FC } from 'react';\n\nexport const DiscordIcon: FC = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"14\"\n      viewBox=\"0 0 18 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M2.75229 1.1725C3.91746 0.62475 5.16332 0.22667 6.46583 0C6.62579 0.290583 6.81267 0.681424 6.94152 0.992336C8.32613 0.783119 9.69799 0.783119 11.0571 0.992336C11.186 0.681424 11.3771 0.290583 11.5385 0C12.8424 0.22667 14.0897 0.626212 15.2549 1.1754C17.605 4.74369 18.2421 8.22334 17.9236 11.6536C16.3648 12.8232 14.8542 13.5336 13.3691 13.9986C13.0024 13.4915 12.6753 12.9525 12.3936 12.3844C12.9302 12.1795 13.4441 11.9267 13.9297 11.6333C13.8009 11.5374 13.6749 11.4371 13.5531 11.334C10.5914 12.7258 7.37333 12.7258 4.44695 11.334C4.32377 11.4371 4.19779 11.5374 4.07037 11.6333C4.55739 11.9282 5.07271 12.181 5.60928 12.3859C5.32755 12.9525 5.00192 13.493 4.63383 14C3.14727 13.5351 1.63526 12.8246 0.0765038 11.6536C-0.297264 7.67706 0.715002 4.22936 2.75229 1.1725ZM11.9901 9.54402C12.8792 9.54402 13.6083 8.71005 13.6083 7.69449C13.6083 6.67892 12.8948 5.84352 11.9901 5.84352C11.0854 5.84352 10.3563 6.67746 10.3719 7.69449C10.3705 8.71005 11.0854 9.54402 11.9901 9.54402ZM6.00994 9.54402C6.89903 9.54402 7.62816 8.71005 7.62816 7.69449C7.62816 6.67892 6.91463 5.84352 6.00994 5.84352C5.10528 5.84352 4.37616 6.67746 4.39173 7.69449C4.39173 8.71005 5.10528 9.54402 6.00994 9.54402Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n","import { FC } from 'react';\n\nexport const TelegramIcon: FC = () => {\n  return (\n    <svg\n      width=\"16\"\n      height=\"14\"\n      viewBox=\"0 0 16 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M0.282608 6.71295L3.96933 8.0958L5.39632 12.7078C5.48763 13.0032 5.84704 13.1124 6.0856 12.9164L8.14064 11.2327C8.35606 11.0563 8.66288 11.0475 8.88801 11.2118L12.5946 13.9162C12.8498 14.1026 13.2113 13.9621 13.2753 13.6522L15.9906 0.526311C16.0604 0.187781 15.7295 -0.0946306 15.4087 0.0300401L0.278288 5.89594C-0.0950996 6.04066 -0.0918463 6.57193 0.282608 6.71295ZM5.16635 7.35967L12.3716 2.89988C12.5011 2.81996 12.6343 2.99593 12.5231 3.09959L6.5767 8.65456C6.36768 8.85009 6.23286 9.11176 6.19467 9.39578L5.99211 10.9044C5.96528 11.1058 5.68373 11.1258 5.62843 10.9309L4.84939 8.17989C4.76016 7.86613 4.89019 7.53097 5.16635 7.35967Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n","import { FC } from 'react';\n\nexport const TwitterIcon: FC = () => {\n  return (\n    <svg\n      width=\"18\"\n      height=\"14\"\n      viewBox=\"0 0 18 14\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M17.592 1.6157C17.3093 1.73484 17.0185 1.8354 16.7215 1.91704C17.0732 1.53919 17.3413 1.0946 17.505 0.608086C17.5417 0.499035 17.5037 0.379668 17.4093 0.308346C17.3151 0.236968 17.1841 0.228419 17.0804 0.286833C16.4495 0.642286 15.7689 0.897733 15.0552 1.04711C14.3363 0.379778 13.3599 0 12.3505 0C10.2199 0 8.4864 1.6467 8.4864 3.67075C8.4864 3.83016 8.49703 3.98869 8.51805 4.14502C5.87409 3.92449 3.41605 2.68994 1.72812 0.722985C1.66797 0.652876 1.5753 0.615092 1.48042 0.622318C1.38549 0.629378 1.30019 0.680236 1.25223 0.758398C0.90988 1.31645 0.728894 1.95471 0.728894 2.60411C0.728894 3.48861 1.06131 4.32782 1.64852 4.98356C1.46997 4.92482 1.2967 4.8514 1.13134 4.76419C1.04256 4.71725 0.934209 4.71797 0.84601 4.76601C0.757752 4.81405 0.702417 4.90242 0.700094 4.99901C0.699688 5.01528 0.699687 5.03155 0.699687 5.04804C0.699687 6.3683 1.44767 7.55695 2.59125 8.20481C2.493 8.19549 2.39482 8.18197 2.29727 8.16427C2.1967 8.14601 2.09329 8.17949 2.02547 8.25236C1.95753 8.32517 1.93506 8.42666 1.96636 8.51933C2.38965 9.77478 3.47946 10.6982 4.79694 10.9798C3.70423 11.6299 2.45462 11.9705 1.14283 11.9705C0.869119 11.9705 0.593836 11.9552 0.324418 11.9249C0.190579 11.9098 0.0626057 11.9849 0.0170252 12.1058C-0.0285553 12.2268 0.0197542 12.3616 0.133618 12.431C1.81882 13.4574 3.7674 14 5.76859 14C9.70268 14 12.1637 12.2376 13.5355 10.7592C15.2461 8.91566 16.2271 6.47554 16.2271 4.06454C16.2271 3.96381 16.2255 3.8621 16.2223 3.76071C16.8971 3.27768 17.4782 2.69309 17.951 2.02118C18.0228 1.91913 18.0151 1.78427 17.9318 1.69033C17.8488 1.59634 17.7103 1.56594 17.592 1.6157Z\"\n        fill=\"currentColor\"\n      />\n    </svg>\n  );\n};\n","import type { FC } from 'react';\nimport React from 'react';\n\nimport styled from 'styled-components';\n\nimport logo from './logo.png';\nimport logoBg from './logo_bg.png';\nimport { DiscordIcon, TelegramIcon, TwitterIcon } from '../Icon';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  max-width: 580px;\n  margin: 15px 15px 35px;\n\n  text-align: center;\n`;\n\nconst LogoBgWrapper = styled.div`\n  position: relative;\n\n  &::before {\n    position: absolute;\n    top: -78px;\n    right: 0;\n    left: 0;\n    height: 216px;\n\n    background: url(${logoBg}) no-repeat 50% 50%;\n    background-size: 216px;\n\n    content: '';\n  }\n`;\n\nconst Logo = styled.img`\n  width: 274px;\n  height: 82px;\n  margin-bottom: 35px;\n`;\n\nconst Title = styled.h1`\n  max-width: 440px;\n  margin: 0;\n\n  color: #fff;\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 25px;\n`;\n\nconst SubTitle = styled.span`\n  margin: 30px 0 13px;\n\n  color: #a8a9ff;\n  font-family: 'Titillium Web', sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 16px;\n`;\n\nconst Description = styled.span`\n  color: #e7e5ff;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst Button = styled.button`\n  position: relative;\n\n  padding: 10px 25px;\n  margin: 33px 0;\n\n  color: #fff;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  white-space: nowrap;\n\n  background: linear-gradient(\n    274.49deg,\n    #0c9ff5 0%,\n    #ba4db4 59.35%,\n    #fe518d 99.33%\n  );\n  border: none;\n  border-radius: 24px;\n\n  appearance: none;\n  user-select: none;\n  cursor: pointer;\n\n  &:hover {\n    &::before {\n      position: absolute;\n      top: -3px;\n      right: -3px;\n      bottom: -3px;\n      left: -3px;\n      z-index: -1;\n\n      background: linear-gradient(\n        274.49deg,\n        #0c9ff5 0%,\n        #ba4db4 59.35%,\n        #fe518d 99.33%\n      );\n      border-radius: 24px;\n      opacity: 0.5;\n\n      content: '';\n    }\n  }\n`;\n\nconst Socials = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n  grid-gap: 22px;\n`;\n\nconst Link = styled.a`\n  display: flex;\n  align-items: center;\n  grid-gap: 16px;\n\n  color: #a8a9ff;\n  font-family: 'Titillium Web', sans-serif;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n\n  &:hover {\n    color: #fff;\n  }\n`;\n\ninterface Props {}\n\nexport const Main: FC<Props> = props => {\n  return (\n    <Wrapper>\n      <LogoBgWrapper>\n        <Logo src={logo} />\n      </LogoBgWrapper>\n      <Title>Spool.so is a non-custodial PLSA protocol on Solana</Title>\n      <SubTitle>What is PLSA?</SubTitle>\n      <Description>\n        PLSA (Prize Linked Savings Account) – a prize linked savings account\n        works as a lottery. A user deposits a certain amount of crypto into the\n        protocol during the draw period. After the draw period ends, the\n        protocol chooses a random user that receives the winnings earned by\n        funds being used by lending protocols (such as Solend, etc.). Meanwhile,\n        users’ funds are safe in the protocol and can be withdrawn at any time.\n      </Description>\n      <Button>Protocol presentation</Button>\n      <Socials>\n        <Link href=\"https://github.com/spool-hq\">\n          <DiscordIcon />\n          Github\n        </Link>\n        <Link href=\"https://discord.gg/STWyK43KJM\">\n          <DiscordIcon />\n          Discord\n        </Link>\n        <Link href=\"https://t.me/spool_so\">\n          <TelegramIcon />\n          Telegram\n        </Link>\n        <Link href=\"https://twitter.com/spool_so\">\n          <TwitterIcon />\n          Twitter\n        </Link>\n      </Socials>\n    </Wrapper>\n  );\n};\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n    *{\n        box-sizing: border-box;\n    }\n    \n    html {\n      height: 100%;\n    }\n    \n    body{\n      min-height: 100%;\n\n      font-family: 'Inter', sans-serif;\n      -webkit-font-smoothing: antialiased;\n    }\n    \n    #root {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-height: 100vh;\n\n      background: linear-gradient(246.2deg, #101051 0.24%, #43186D 100%);\n    }\n\n    a {\n      text-decoration: none;\n      \n      transition: color 0.3s;\n    }\n\n    svg {\n      fill: currentColor;\n    }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\n\nimport { Main } from './components/Main';\n\nimport GlobalStyles from './styles/Global';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Main />\n    </>\n  );\n}\n\nexport default App;\n","import 'normalize.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom'\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}